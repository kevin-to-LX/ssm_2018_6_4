<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kevin.dao.BookMapper" >
  <!--<resultMap id="BaseResultMap" type="com.kevin.model.Book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="typename" property="typename" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="NUMERIC" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, typename, price, state
  </sql>-->
  <!--<select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kevin.model.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>-->
  <!--<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>-->
 <!-- <delete id="deleteByExample" parameterType="com.kevin.model.BookExample" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>-->

 <!-- <select id="countByExample" parameterType="com.kevin.model.BookExample" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>-->
  <!--<update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.typename != null" >
        typename = #{record.typename,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=NUMERIC},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>-->
  <!--<update id="updateByExample" parameterType="map" >
    update book
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      typename = #{record.typename,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=NUMERIC},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>-->
 <!-- <update id="updateByPrimaryKeySelective" parameterType="com.kevin.model.Book" >
    update book
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="typename != null" >
        typename = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=NUMERIC},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kevin.model.Book" >
    update book
    set title = #{title,jdbcType=VARCHAR},
      typename = #{typename,jdbcType=VARCHAR},
      price = #{price,jdbcType=NUMERIC},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>-->

  <!--获得图书信息并分页 -->
  <select id="getAllBooks" resultType="com.kevin.model.Book">
    select id, title, typename, price, state from book
  </select>
  <!-- 获得单个图书通过编号 -->
  <select id="getBookById" parameterType="int" resultType="com.kevin.model.Book">
    select id, title, typename, price, state from book where id=#{id}
  </select>
  <!--新增加图书 -->
  <insert id="add" parameterType="com.kevin.model.Book">
    insert into Book(id, title, typename, price, state) values(seq_book_id.nextval,#{title}, #{typename}, #{price}, #{state})
  </insert>
  <!-- 修改图书 -->
  <update id="edit" parameterType="com.kevin.model.Book">
    update Book set title=#{title}, typename=#{typename}, price=#{price}, state=#{state} where id=#{id}
  </update>
  <!-- 删除图书 -->
  <delete id="delete">
    delete from Book where id=#{id}
  </delete>
</mapper>